import pandas as pd
import sys  # Importa sys para poder encerrar o script em caso de erro

# --- Configura√ß√µes do Arquivo ---
import pandas as pd
import sys  # Importa sys para poder encerrar o script em caso de erro

# --- Configura√ß√µes do Arquivo ---
arquivo_xlsx = 'principal.xlsx'
NOME_ABA = 'Invent√°rio Anal√≠tico SPD'  # Nome exato da aba onde est√£o os dados

# --- Nomes das Colunas Originais no Excel e Seus Novos Nomes ---
# ATEN√á√ÉO: Este mapeamento foi CORRIGIDO com base nos nomes das colunas
# REALMENTE encontradas na sua planilha, que foram listadas no seu √∫ltimo output de erro.
COLUNAS_PARA_PROCESSAR = {
    'RAZ√ÉO EMPRESARIAL': 'RAZ√ÉO EMPRESARIAL',
    # Cabe√ßalho original: 'RAZ√ÉO EMPRESARIAL' -> Novo nome: 'RAZ√ÉO EMPRESARIAL'
    'CNPJ': 'CNPJ',  # Cabe√ßalho original: 'CNPJ' -> Novo nome: 'CNPJ'
    'N√öMERO DE S√âRIE DA POS': 'M√ÅQUINA'  # Cabe√ßalho original: 'N√öMERO DE S√âRIE DA POS' -> Novo nome: 'M√ÅQUINA'
}

# --- Caminho do arquivo de sa√≠da ---
arquivo_saida = 'quantidade_maquinas_por_empresa.xlsx'

# --- In√≠cio do Script ---
try:
    print(f"üîÑ Lendo o arquivo '{arquivo_xlsx}' na aba '{NOME_ABA}'...")

    # L√™ o arquivo Excel da aba espec√≠fica.
    # Por padr√£o, pd.read_excel() usa a primeira linha como cabe√ßalho (header=0).
    df = pd.read_excel(arquivo_xlsx, sheet_name=NOME_ABA)

    print(f"‚úÖ Arquivo '{arquivo_xlsx}' lido com sucesso da aba '{NOME_ABA}'.")
    print("\n--- Primeiras linhas do arquivo lido (com cabe√ßalhos originais) ---")
    print(df.head())
    print("------------------------------------------------------------------")
    print(f"Colunas originais encontradas: {list(df.columns)}")

    # --- Valida√ß√£o das Colunas Essenciais ---
    # Verifica se todas as colunas originais esperadas existem no DataFrame
    missing_cols = [col for col in COLUNAS_PARA_PROCESSAR.keys() if col not in df.columns]

    if missing_cols:
        print(f"\n‚ùå ERRO: A aba '{NOME_ABA}' est√° faltando as seguintes colunas essenciais:")
        for col in missing_cols:
            print(f"- '{col}'")
        print(
            "Por favor, verifique se os nomes das colunas no seu Excel correspondem EXATAMENTE ao mapeamento no script.")
        print(f"As colunas DISPON√çVEIS na planilha s√£o: {list(df.columns)}")  # Adicionado para clareza
        sys.exit(1)  # Encerra o script com erro

    # --- Seleciona as colunas relevantes e as renomeia ---
    # Cria um novo DataFrame apenas com as colunas que voc√™ precisa e j√° as renomeia
    df_processar = df[list(COLUNAS_PARA_PROCESSAR.keys())].rename(columns=COLUNAS_PARA_PROCESSAR)

    print(f"\n‚úÖ Colunas relevantes selecionadas e renomeadas para: {list(df_processar.columns)}")

    # --- Limpeza e Padroniza√ß√£o dos Dados das Colunas ---
    # Assegura que os valores s√£o strings e remove espa√ßos em branco extras
    df_processar['RAZ√ÉO EMPRESARIAL'] = df_processar['RAZ√ÉO EMPRESARIAL'].astype(str).str.strip()

    # Para CNPJ: Converte para string, remove quaisquer caracteres n√£o num√©ricos e remove espa√ßos
    df_processar['CNPJ'] = df_processar['CNPJ'].astype(str).str.replace(r'[^\d]', '', regex=True).str.strip()

    df_processar['M√ÅQUINA'] = df_processar['M√ÅQUINA'].astype(str).str.strip()
    print("‚úÖ Dados das colunas 'RAZ√ÉO EMPRESARIAL', 'CNPJ' e 'M√ÅQUINA' limpos e padronizados.")

    # --- Agrupa e Conta as M√°quinas ---
    print("\nüîÑ Agrupando por 'RAZ√ÉO EMPRESARIAL' e 'CNPJ' e contando as m√°quinas...")
    resultado = df_processar.groupby(['RAZ√ÉO EMPRESARIAL', 'CNPJ']).size().reset_index(name='Quantidade de M√°quinas')
    print("‚úÖ Agrupamento e contagem de m√°quinas por empresa/CNPJ conclu√≠dos.")

    # --- Salva o Resultado ---
    print(f"\nüîÑ Salvando o resultado em: '{arquivo_saida}'...")
    resultado.to_excel(arquivo_saida, index=False)  # index=False para n√£o incluir a coluna de √≠ndice do DataFrame

    print(f'\nüéâ Sucesso! O resultado foi salvo em: {arquivo_saida}')

except FileNotFoundError:
    print(f"\n‚ùå ERRO: O arquivo '{arquivo_xlsx}' n√£o foi encontrado.")
    print("Por favor, verifique se o nome do arquivo est√° correto e se ele est√° na mesma pasta do script.")
    sys.exit(1)
except Exception as e:
    print(f"\n‚ùå Ocorreu um erro inesperado durante a execu√ß√£o do script: {e}")
    print("Verifique os detalhes do erro acima e a estrutura da sua planilha Excel.")
    sys.exit(1)